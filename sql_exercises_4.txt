Exercise: 25 (Serge I: 2003-02-14)
Find the printer makers also producing PCs with the lowest RAM capacity and the highest processor speed of all PCs having the lowest RAM capacity.
Result set: maker.

SELECT DISTINCT maker
FROM Product, PC
WHERE Product.model = PC.model
AND ram =
(SELECT MIN(ram)
from PC)
AND speed =
(SELECT MAX(speed)
FROM PC
WHERE ram =
(SELECT MIN(ram)
FROM PC))
AND maker IN
(SELECT maker
FROM Product
WHERE type='Printer');



Exercise: 26 (Serge I: 2003-02-14)
Find out the average price of PCs and laptops produced by maker A.
Result set: one overall average price for all items.

SELECT AVG(price)
FROM
(SELECT price
FROM Product, PC
WHERE Product.model = PC.model
AND maker = 'A'
UNION  ALL
SELECT price
FROM Product, Laptop
WHERE Product.model = Laptop.model
AND maker='A'
) as union_price



Exercise: 27 (Serge I: 2003-02-03)
Find out the average hard disk drive capacity of PCs produced by makers who also manufacture printers.
Result set: maker, average HDD capacity.

SELECT maker, avg(hd)
FROM Product, PC
WHERE Product.model = PC.model
AND maker IN
(SELECT DISTINCT maker
FROM Product
WHERE type='printer')
GROUP BY maker



Exercise: 29 (Serge I: 2003-02-14)
Under the assumption that receipts of money (inc) and payouts (out) are registered not more than once a day for each collection point [i.e. the primary key consists of (point, date)], write a query displaying cash flow data (point, date, income, expense).
Use Income_o and Outcome_o tables.

SELECT i.point, i.date, i.inc, o.out
FROM Income_o i LEFT JOIN Outcome_o o
ON i.point = o.point
AND i.date = o.date
UNION
SELECT o.point, o.date, i.inc, o.out
FROM Outcome_o o LEFT JOIN Income_o i
ON o.point = i.point
AND o.date = i.date



Exercise: 30 (Serge I: 2003-02-14)
Under the assumption that receipts of money (inc) and payouts (out) can be registered any number of times a day for each collection point [i.e. the code column is the primary key], display a table with one corresponding row for each operating date of each collection point.
Result set: point, date, total payout per day (out), total money intake per day (inc).
Missing values are considered to be NULL.

SELECT i.point, i.date, o.out, i.inc
FROM
(SELECT point, date, SUM(inc) AS inc
FROM Income
GROUP BY point, date) i
LEFT JOIN
(SELECT point, date, SUM(out) AS out
FROM Outcome
GROUP BY point, date) o
ON i.point = o.point
AND i.date = o.date
UNION
SELECT o.point, o.date, o.out, i.inc
FROM
(SELECT point, date, SUM(out) AS out
FROM Outcome
GROUP BY point, date) o
LEFT JOIN
(SELECT point, date, SUM(inc) AS inc
FROM Income
GROUP BY point, date) i
ON o.point = i.point
AND o.date = i.date



Exercise: 31 (Serge I: 2002-10-22)
For ship classes with a gun caliber of 16 in. or more, display the class and the country.

SELECT class, country
FROM Classes
WHERE bore >= 16



Exercise: 32 (Serge I: 2003-02-17)
One of the characteristics of a ship is one-half the cube of the calibre of its main guns (mw).
Determine the average ship mw with an accuracy of two decimal places for each country having ships in the database.

SELECT country, CONVERT(NUMERIC(10, 2), AVG(POWER(bore, 3)/2)) weight 
FROM
(SELECT country, bore, name FROM classes c, ships s
WHERE s.class=c.class
UNION
SELECT country, bore, ship FROM classes c, outcomes o
WHERE o.ship=c.class 
AND o.ship NOT IN(SELECT DISTINCT name FROM ships))x
GROUP BY country;



Exercise: 33 (Serge I: 2002-11-02)
Get the ships sunk in the North Atlantic battle.
Result set: ship.

SELECT ship
FROM Outcomes
WHERE battle = 'North Atlantic'
AND result = 'sunk';



Exercise: 34 (Serge I: 2002-11-04)
In accordance with the Washington Naval Treaty concluded in the beginning of 1922, it was prohibited to build battle ships with a displacement of more than 35 thousand tons.
Get the ships violating this treaty (only consider ships for which the year of launch is known).
List the names of the ships.

SELECT distinct name
FROM Ships, Classes
WHERE Ships.class = Classes.class
AND type = 'bb'
AND displacement > 35000
AND launched >= 1922;



Exercise: 35 (qwrqwr: 2012-11-23)
Find models in the Product table consisting either of digits only or Latin letters (A-Z, case insensitive) only.
Result set: model, type.

SELECT model, type
FROM product
WHERE model NOT LIKE '%[^a-z]%'
OR model NOT LIKE '%[^A-Z]%'
OR model NOT LIKE '%[^0-9]%'

