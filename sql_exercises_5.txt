Exercise: 36 (Serge I: 2003-02-17)
List the names of lead ships in the database (including the Outcomes table).


SELECT name
FROM Ships
WHERE name IN
(SELECT class
FROM Classes)
UNION
SELECT ship
FROM Outcomes
WHERE ship IN
(SELECT class
FROM Classes);



Exercise: 37 (Serge I: 2003-02-17)
Find classes for which only one ship exists in the database (including the Outcomes table).

SELECT class
FROM
(SELECT Classes.class, name
FROM Classes, Ships
WHERE Classes.class = Ships.class
UNION
SELECT class, ship AS name
FROM Classes, Outcomes
WHERE Classes.class = Outcomes.ship
) AS full_ship
GROUP BY class
HAVING count(*) = 1



Exercise: 38 (Serge I: 2003-02-19)
Find countries that ever had classes of both battleships (‘bb’) and cruisers (‘bc’).


SELECT DISTINCT country
FROM Classes
WHERE type='bb'
AND country IN
(SELECT DISTINCT country
FROM Classes
WHERE type='bc')



Exercise: 39 (Serge I: 2003-02-14)
Find the ships that `survived for future battles`; that is, after being damaged in a battle, they participated in another one, which occurred later.


SELECT DISTINCT o2.ship FROM
(SELECT ship, battle, result, date
FROM Outcomes, Battles
WHERE Outcomes.battle = Battles.name
AND result='damaged') AS o1,
(SELECT ship, battle, result, date
FROM Outcomes, Battles
WHERE Outcomes.battle = Battles.name) AS o2
WHERE o1.ship = o2.ship
AND o1.date < o2.date




Exercise: 40 (Serge I: 2012-04-20)
Get the makers who produce only one product type and more than one model. Output: maker, type.

select distinct p1.maker, p1.type from Product p1
inner join
(SELECT p1.maker
FROM Product p1
GROUP BY p1.maker
HAVING COUNT(p1.model) > 1 and count(distinct p1.type) = 1)p3
on p1.maker = p3.maker



Exercise: 41 (Serge I: 2019-05-31)
For each maker who has models at least in one of the tables PC, Laptop, or Printer, determine the maximum price for his products.
Output: maker; if there are NULL values among the prices for the products of a given maker, display NULL for this maker, otherwise, the maximum price.


SELECT
  pro.maker,
  NULLIF(MAX(COALESCE(pri.price, 922337203685477)), 922337203685477) as price
FROM
  product pro
  INNER JOIN
  (
    SELECT model, price FROM printer
    UNION ALL
    SELECT model, price FROM pc
    UNION ALL
    SELECT model, price FROM laptop
  ) pri 
  ON pri.model = pro.model
GROUP BY pro.maker





Exercise: 42 (Serge I: 2002-11-05)
Find the names of ships sunk at battles, along with the names of the corresponding battles.


select ship, battle
from Outcomes
where result='sunk';




Exercise: 43 (qwrqwr: 2011-10-28)
Get the battles that occurred in years when no ships were launched into water.


select name
from Battles
where year(date)
not in
(select launched
from Ships
where launched is not null);



Exercise: 44 (Serge I: 2002-12-04)
Find all ship names beginning with the letter R.

select name
from Ships
where name like 'R%'
union
select ship
from Outcomes
where ship like 'R%';



Exercise: 45 (Serge I: 2002-12-04)
Find all ship names consisting of three or more words (e.g., King George V).
Consider the words in ship names to be separated by single spaces, and the ship names to have no leading or trailing spaces.


select name
from Ships
where name like '% % %'
union
select ship
from Outcomes
where ship like '% % %';



Exercise: 46 (Serge I: 2003-02-14)
For each ship that participated in the Battle of Guadalcanal, get its name, displacement, and the number of guns.


select distinct ship, displacement, numguns
from Classes left join Ships
on classes.class=ships.class
right join Outcomes
on Classes.class=ship
or ships.name=ship
where battle='Guadalcanal';




Exercise: 48 (Serge I: 2003-02-16)
Find the ship classes having at least one ship sunk in battles.

select distinct Classes.class
from Classes, Ships, Outcomes
where Classes.class = Ships.class
and Ships.name = Outcomes.ship
and Outcomes.result = 'sunk'
union
select distinct class
from Classes, Outcomes
where Classes.class = Outcomes.ship
and Outcomes.result = 'sunk'



Exercise: 49 (Serge I: 2003-02-17)
Find the names of the ships having a gun caliber of 16 inches (including ships in the Outcomes table).

select name
from Ships, Classes
where Ships.class = Classes.class
and bore = 16
union
select ship
from Outcomes, Classes
where Outcomes.ship = Classes.class
and bore = 16;



Exercise: 50 (Serge I: 2002-11-05)
Find the battles in which Kongo-class ships from the Ships table were engaged.

select battle
from Outcomes, Ships
where Outcomes.ship = Ships.name
and Ships.class = 'Kongo'
